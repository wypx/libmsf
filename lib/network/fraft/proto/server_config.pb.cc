// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: server_config.proto

#include "server_config.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/stubs/port.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// This is a temporary google only hack
#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
#include "third_party/protobuf/version.h"
#endif
// @@protoc_insertion_point(includes)

namespace protobuf_server_5fconfig_2eproto {
extern PROTOBUF_INTERNAL_EXPORT_protobuf_server_5fconfig_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_ServerInfo;
}  // namespace protobuf_server_5fconfig_2eproto
namespace fraft {
class ServerInfoDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<ServerInfo>
      _instance;
} _ServerInfo_default_instance_;
class ServerConfigDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<ServerConfig>
      _instance;
} _ServerConfig_default_instance_;
}  // namespace fraft
namespace protobuf_server_5fconfig_2eproto {
static void InitDefaultsServerInfo() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::fraft::_ServerInfo_default_instance_;
    new (ptr) ::fraft::ServerInfo();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::fraft::ServerInfo::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_ServerInfo =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsServerInfo}, {}};

static void InitDefaultsServerConfig() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::fraft::_ServerConfig_default_instance_;
    new (ptr) ::fraft::ServerConfig();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::fraft::ServerConfig::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<1> scc_info_ServerConfig =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 1, InitDefaultsServerConfig}, {
      &protobuf_server_5fconfig_2eproto::scc_info_ServerInfo.base,}};

void InitDefaults() {
  ::google::protobuf::internal::InitSCC(&scc_info_ServerInfo.base);
  ::google::protobuf::internal::InitSCC(&scc_info_ServerConfig.base);
}

::google::protobuf::Metadata file_level_metadata[2];

const ::google::protobuf::uint32 TableStruct::offsets[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::fraft::ServerInfo, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::fraft::ServerInfo, server_host_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::fraft::ServerInfo, leader_port_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::fraft::ServerInfo, election_port_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::fraft::ServerInfo, server_id_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::fraft::ServerConfig, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::fraft::ServerConfig, my_server_id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::fraft::ServerConfig, server_info_),
};
static const ::google::protobuf::internal::MigrationSchema schemas[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  { 0, -1, sizeof(::fraft::ServerInfo)},
  { 9, -1, sizeof(::fraft::ServerConfig)},
};

static ::google::protobuf::Message const * const file_default_instances[] = {
  reinterpret_cast<const ::google::protobuf::Message*>(&::fraft::_ServerInfo_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::fraft::_ServerConfig_default_instance_),
};

void protobuf_AssignDescriptors() {
  AddDescriptors();
  AssignDescriptors(
      "server_config.proto", schemas, file_default_instances, TableStruct::offsets,
      file_level_metadata, NULL, NULL);
}

void protobuf_AssignDescriptorsOnce() {
  static ::google::protobuf::internal::once_flag once;
  ::google::protobuf::internal::call_once(once, protobuf_AssignDescriptors);
}

void protobuf_RegisterTypes(const ::std::string&) GOOGLE_PROTOBUF_ATTRIBUTE_COLD;
void protobuf_RegisterTypes(const ::std::string&) {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::internal::RegisterAllTypes(file_level_metadata, 2);
}

void AddDescriptorsImpl() {
  InitDefaults();
  static const char descriptor[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
      "\n\023server_config.proto\022\005fraft\"`\n\nServerIn"
      "fo\022\023\n\013server_host\030\001 \001(\t\022\023\n\013leader_port\030\002"
      " \001(\r\022\025\n\relection_port\030\003 \001(\r\022\021\n\tserver_id"
      "\030\004 \001(\004\"L\n\014ServerConfig\022\024\n\014my_server_id\030\001"
      " \001(\004\022&\n\013server_info\030\002 \003(\0132\021.fraft.Server"
      "Infob\006proto3"
  };
  ::google::protobuf::DescriptorPool::InternalAddGeneratedFile(
      descriptor, 212);
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedFile(
    "server_config.proto", &protobuf_RegisterTypes);
}

void AddDescriptors() {
  static ::google::protobuf::internal::once_flag once;
  ::google::protobuf::internal::call_once(once, AddDescriptorsImpl);
}
// Force AddDescriptors() to be called at dynamic initialization time.
struct StaticDescriptorInitializer {
  StaticDescriptorInitializer() {
    AddDescriptors();
  }
} static_descriptor_initializer;
}  // namespace protobuf_server_5fconfig_2eproto
namespace fraft {

// ===================================================================

void ServerInfo::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int ServerInfo::kServerHostFieldNumber;
const int ServerInfo::kLeaderPortFieldNumber;
const int ServerInfo::kElectionPortFieldNumber;
const int ServerInfo::kServerIdFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

ServerInfo::ServerInfo()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_server_5fconfig_2eproto::scc_info_ServerInfo.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:fraft.ServerInfo)
}
ServerInfo::ServerInfo(const ServerInfo& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  server_host_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.server_host().size() > 0) {
    server_host_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.server_host_);
  }
  ::memcpy(&leader_port_, &from.leader_port_,
    static_cast<size_t>(reinterpret_cast<char*>(&server_id_) -
    reinterpret_cast<char*>(&leader_port_)) + sizeof(server_id_));
  // @@protoc_insertion_point(copy_constructor:fraft.ServerInfo)
}

void ServerInfo::SharedCtor() {
  server_host_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&leader_port_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&server_id_) -
      reinterpret_cast<char*>(&leader_port_)) + sizeof(server_id_));
}

ServerInfo::~ServerInfo() {
  // @@protoc_insertion_point(destructor:fraft.ServerInfo)
  SharedDtor();
}

void ServerInfo::SharedDtor() {
  server_host_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void ServerInfo::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* ServerInfo::descriptor() {
  ::protobuf_server_5fconfig_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_server_5fconfig_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const ServerInfo& ServerInfo::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_server_5fconfig_2eproto::scc_info_ServerInfo.base);
  return *internal_default_instance();
}


void ServerInfo::Clear() {
// @@protoc_insertion_point(message_clear_start:fraft.ServerInfo)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  server_host_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&leader_port_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&server_id_) -
      reinterpret_cast<char*>(&leader_port_)) + sizeof(server_id_));
  _internal_metadata_.Clear();
}

bool ServerInfo::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:fraft.ServerInfo)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string server_host = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_server_host()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->server_host().data(), static_cast<int>(this->server_host().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "fraft.ServerInfo.server_host"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 leader_port = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &leader_port_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 election_port = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u /* 24 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &election_port_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint64 server_id = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(32u /* 32 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &server_id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:fraft.ServerInfo)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:fraft.ServerInfo)
  return false;
#undef DO_
}

void ServerInfo::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:fraft.ServerInfo)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string server_host = 1;
  if (this->server_host().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->server_host().data(), static_cast<int>(this->server_host().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "fraft.ServerInfo.server_host");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->server_host(), output);
  }

  // uint32 leader_port = 2;
  if (this->leader_port() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(2, this->leader_port(), output);
  }

  // uint32 election_port = 3;
  if (this->election_port() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(3, this->election_port(), output);
  }

  // uint64 server_id = 4;
  if (this->server_id() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(4, this->server_id(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:fraft.ServerInfo)
}

::google::protobuf::uint8* ServerInfo::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:fraft.ServerInfo)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string server_host = 1;
  if (this->server_host().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->server_host().data(), static_cast<int>(this->server_host().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "fraft.ServerInfo.server_host");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->server_host(), target);
  }

  // uint32 leader_port = 2;
  if (this->leader_port() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(2, this->leader_port(), target);
  }

  // uint32 election_port = 3;
  if (this->election_port() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(3, this->election_port(), target);
  }

  // uint64 server_id = 4;
  if (this->server_id() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(4, this->server_id(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:fraft.ServerInfo)
  return target;
}

size_t ServerInfo::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:fraft.ServerInfo)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // string server_host = 1;
  if (this->server_host().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->server_host());
  }

  // uint32 leader_port = 2;
  if (this->leader_port() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->leader_port());
  }

  // uint32 election_port = 3;
  if (this->election_port() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->election_port());
  }

  // uint64 server_id = 4;
  if (this->server_id() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->server_id());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void ServerInfo::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:fraft.ServerInfo)
  GOOGLE_DCHECK_NE(&from, this);
  const ServerInfo* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const ServerInfo>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:fraft.ServerInfo)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:fraft.ServerInfo)
    MergeFrom(*source);
  }
}

void ServerInfo::MergeFrom(const ServerInfo& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:fraft.ServerInfo)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.server_host().size() > 0) {

    server_host_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.server_host_);
  }
  if (from.leader_port() != 0) {
    set_leader_port(from.leader_port());
  }
  if (from.election_port() != 0) {
    set_election_port(from.election_port());
  }
  if (from.server_id() != 0) {
    set_server_id(from.server_id());
  }
}

void ServerInfo::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:fraft.ServerInfo)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ServerInfo::CopyFrom(const ServerInfo& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:fraft.ServerInfo)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ServerInfo::IsInitialized() const {
  return true;
}

void ServerInfo::Swap(ServerInfo* other) {
  if (other == this) return;
  InternalSwap(other);
}
void ServerInfo::InternalSwap(ServerInfo* other) {
  using std::swap;
  server_host_.Swap(&other->server_host_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(leader_port_, other->leader_port_);
  swap(election_port_, other->election_port_);
  swap(server_id_, other->server_id_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata ServerInfo::GetMetadata() const {
  protobuf_server_5fconfig_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_server_5fconfig_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void ServerConfig::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int ServerConfig::kMyServerIdFieldNumber;
const int ServerConfig::kServerInfoFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

ServerConfig::ServerConfig()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_server_5fconfig_2eproto::scc_info_ServerConfig.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:fraft.ServerConfig)
}
ServerConfig::ServerConfig(const ServerConfig& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      server_info_(from.server_info_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  my_server_id_ = from.my_server_id_;
  // @@protoc_insertion_point(copy_constructor:fraft.ServerConfig)
}

void ServerConfig::SharedCtor() {
  my_server_id_ = GOOGLE_ULONGLONG(0);
}

ServerConfig::~ServerConfig() {
  // @@protoc_insertion_point(destructor:fraft.ServerConfig)
  SharedDtor();
}

void ServerConfig::SharedDtor() {
}

void ServerConfig::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* ServerConfig::descriptor() {
  ::protobuf_server_5fconfig_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_server_5fconfig_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const ServerConfig& ServerConfig::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_server_5fconfig_2eproto::scc_info_ServerConfig.base);
  return *internal_default_instance();
}


void ServerConfig::Clear() {
// @@protoc_insertion_point(message_clear_start:fraft.ServerConfig)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  server_info_.Clear();
  my_server_id_ = GOOGLE_ULONGLONG(0);
  _internal_metadata_.Clear();
}

bool ServerConfig::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:fraft.ServerConfig)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // uint64 my_server_id = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &my_server_id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .fraft.ServerInfo server_info = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
                input, add_server_info()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:fraft.ServerConfig)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:fraft.ServerConfig)
  return false;
#undef DO_
}

void ServerConfig::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:fraft.ServerConfig)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint64 my_server_id = 1;
  if (this->my_server_id() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(1, this->my_server_id(), output);
  }

  // repeated .fraft.ServerInfo server_info = 2;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->server_info_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2,
      this->server_info(static_cast<int>(i)),
      output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:fraft.ServerConfig)
}

::google::protobuf::uint8* ServerConfig::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:fraft.ServerConfig)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint64 my_server_id = 1;
  if (this->my_server_id() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(1, this->my_server_id(), target);
  }

  // repeated .fraft.ServerInfo server_info = 2;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->server_info_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        2, this->server_info(static_cast<int>(i)), deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:fraft.ServerConfig)
  return target;
}

size_t ServerConfig::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:fraft.ServerConfig)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // repeated .fraft.ServerInfo server_info = 2;
  {
    unsigned int count = static_cast<unsigned int>(this->server_info_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->server_info(static_cast<int>(i)));
    }
  }

  // uint64 my_server_id = 1;
  if (this->my_server_id() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->my_server_id());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void ServerConfig::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:fraft.ServerConfig)
  GOOGLE_DCHECK_NE(&from, this);
  const ServerConfig* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const ServerConfig>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:fraft.ServerConfig)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:fraft.ServerConfig)
    MergeFrom(*source);
  }
}

void ServerConfig::MergeFrom(const ServerConfig& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:fraft.ServerConfig)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  server_info_.MergeFrom(from.server_info_);
  if (from.my_server_id() != 0) {
    set_my_server_id(from.my_server_id());
  }
}

void ServerConfig::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:fraft.ServerConfig)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ServerConfig::CopyFrom(const ServerConfig& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:fraft.ServerConfig)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ServerConfig::IsInitialized() const {
  return true;
}

void ServerConfig::Swap(ServerConfig* other) {
  if (other == this) return;
  InternalSwap(other);
}
void ServerConfig::InternalSwap(ServerConfig* other) {
  using std::swap;
  CastToBase(&server_info_)->InternalSwap(CastToBase(&other->server_info_));
  swap(my_server_id_, other->my_server_id_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata ServerConfig::GetMetadata() const {
  protobuf_server_5fconfig_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_server_5fconfig_2eproto::file_level_metadata[kIndexInFileMessages];
}


// @@protoc_insertion_point(namespace_scope)
}  // namespace fraft
namespace google {
namespace protobuf {
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::fraft::ServerInfo* Arena::CreateMaybeMessage< ::fraft::ServerInfo >(Arena* arena) {
  return Arena::CreateInternal< ::fraft::ServerInfo >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::fraft::ServerConfig* Arena::CreateMaybeMessage< ::fraft::ServerConfig >(Arena* arena) {
  return Arena::CreateInternal< ::fraft::ServerConfig >(arena);
}
}  // namespace protobuf
}  // namespace google

// @@protoc_insertion_point(global_scope)
