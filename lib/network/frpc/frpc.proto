syntax="proto3";
package frpc;

option cc_generic_services = true;

enum MessageType {
  FRPC_MESSAGE_UNKNOWN = 0;
  FRPC_MESSAGE_REQUEST = 1;
  FRPC_MESSAGE_RESPONSE = 2;
  FRPC_MESSAGE_CANCEL = 3;
}

enum MessageID {
  FRPC_LOGIN = 0;
  FRPC_HEARTBEAT = 1;
}

enum ReturnCode {
  FRPC_SUCCESS = 0;
  FRPC_NO_SERVICE = 1;
  FRPC_NO_METHOD = 2;
  FRPC_INVALID_REQUEST = 3;
  FRPC_INVALID_REPONSE = 4;
}

message ResponseCode {
  int32 rc = 1; // return code
  string msg = 2; // msg inclued if rc not zero
};

// https://blog.csdn.net/qq_22660775/article/details/89163881
// The message header is fixed, and the business
// header is specified in the message header
message MessageHead {
  fixed32 version   = 1; // message version
  fixed32 magic     = 2; // message magic
  fixed32 length    = 3; // body length
  fixed32 type      = 4; // message type
  fixed32 msid      = 5; // message id
}

message MessageBody {
  FrpcRequest frpc_request = 1;
  FrpcResponse frpc_response = 2;
  FrpcCancel frpc_cancel = 3;
}

message Message {
  MessageHead head = 1;
  MessageBody body = 2;
}

message FrpcRequest {
  string call_id = 1;
  string service = 2; // service name
  string method = 3;  // mothod name
}

message FrpcResponse {
  string call_id = 1;
  ResponseCode rc = 2; // return code
  bytes reponse = 3; // buffer
}

message FrpcCancel {
  string call_id = 1;
  string service = 2; // service name
  string method = 3;  // mothod name
}



